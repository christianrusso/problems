Dado un arreglo A no vacío e indexado desde cero conteniendo una permutación de los enteros 1 a N. Una permutación de enteros de 1 a K es una secuencia conteniendo los enteros de 1 a K una y solo una vez.

Una permutación de prefijos es un indice P que cumple 0 ≤ P < N y tal que la secuencia A[0], A[1], ..., A[P] es una permutación de enteros de 1 a P + 1,
El objetivo es calcular la cantidad de permutación de prefijos en el arreglo.

Por ejemplo, dado el arreglo A:
   A[0] = 2
    A[1] = 1
    A[2] = 3
    A[3] = 5
    A[4] = 4
Hay exactamente tres permutaciones de prefijos: 1, 2 y 4.

Escribir una funcion:

int solution(int A[], int N);

que dado un arreglo no vacío e indexado desde cero A conteniendo una permutación de enteros de 1 to N, devuelva la cantidad de permutaciones de prefijos.

Por ejemplo, dado:
   A[0] = 2
    A[1] = 1
    A[2] = 3
    A[3] = 5
    A[4] = 4
la función deberia devolver 3, como se explicó previamente.

Asumir que:
N es un entero en el rango [1..100,000];
Los elementos de A son todos distintos;
cada elemento del arreglo A es un entero en el rango [1..N].

Complejidad:
Complejidad de peor caso esperada is O(N);
Complejidad espacial esperada O(1), mas alla del input (sin contar el espacio que ocupa el input).

Los elementos del arreglo de input pueden ser modificados.